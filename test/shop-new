DOKKU_HOST=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)

alias dokku='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /app/.ssh-samson/id_rsa samson@${DOKKU_HOST} dokku'

alias ssh-dokku='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /app/.ssh-samson/id_rsa -t -t samson@${DOKKU_HOST}'

export APP=${STAGE}-shop-new

echo "-----> Create application if necessary"
if ! dokku apps | egrep -q "^${APP}$"; then
  dokku apps:create "${APP}"
fi

echo "-----> Create and link MySQL container if necessary"
if ! dokku mysql:list | awk '{ print $1 }' | egrep -q "^${STAGE}-shop$"; then
  ssh-dokku "export MYSQL_IMAGE_VERSION='5.6'; dokku mysql:create ${STAGE}-shop"
  dokku mysql:link "${STAGE}-shop" "${APP}" || true
fi
dokku mysql:promote "${STAGE}-shop" "${APP}" || true


echo "-----> Create and link Redis container if necessary"
if ! dokku redis:list | awk '{ print $1 }' | egrep -q "^${APP}$"; then
  dokku redis:create "${APP}"
  dokku redis:link "${APP}" "${APP}" || true
fi
dokku redis:promote "${APP}" "${APP}" || true

echo "-----> Create and link Elasticsearch container"
if dokku elasticsearch:list | awk '{ print $1 }' | egrep -q "^${APP}$"; then
  dokku elasticsearch:unlink "${APP}" "${APP}" || true
  echo "${APP}" | dokku elasticsearch:destroy "${APP}"
fi

if ! dokku elasticsearch:list | awk '{ print $1 }' | egrep -q "^${APP}$"; then
  # Create and link elasticsearch container
  ssh-dokku "export ELASTICSEARCH_IMAGE_VERSION='1.7';dokku elasticsearch:create ${APP}"
  dokku elasticsearch:link "${APP}" "${APP}"
fi

echo "-----> Create and link SQS container if necessary"
if ! dokku sqs:list | awk '{ print $1 }' | egrep -q "^${STAGE}$"; then
  dokku sqs:create "${STAGE}"
  # Add SQS queue and link it to the application
  dokku sqs:queue:add "${STAGE}" "${STAGE}" || true
  dokku sqs:link "${STAGE}" "${APP}" || true
fi

echo "-----> Set application backend parameters"
ssh-dokku "export SHOP_NEW_REDIS_URL=\$(dokku config:get ${APP} REDIS_URL); export SHOP_NEW_ELASTICSEARCH_URL=\$(dokku config:get ${APP} ELASTICSEARCH_URL); export SHOP_NEW_DATABASE_URL=\$(dokku config:get ${APP} DATABASE_URL); export SHOP_NEW_AWS_SQS_ELASTICSEARCH_UPDATE_QUEUE=\$(dokku config:get ${APP} SQS_URL)/\$(echo ${STAGE}); dokku config:set ${APP} \$(printenv | egrep '^SHOP_NEW.*=.*$' | tr '\\n' ' ' | tr -d '[[:space:]]')"

echo "-----> Set all environment variables coming from Samson"
dokku config:set "${APP}"  "$(tr '\n' ' ' < .env)"

echo "-----> Set up SSH environment"
ssh-keyscan -H "${DOKKU_HOST}" > ~/.ssh/known_hosts
printf 'Host *\n UserKnownHostsFile ~/.ssh/known_hosts\n StrictHostKeyChecking no\n IdentityFile ~/.ssh-samson/id_rsa\n' > ~/.ssh/config

echo "-----> Deploy application"
git remote add dokku dokku@"${DOKKU_HOST}":"${APP}"
git push dokku "${REVISION}":master

if [ -z ${DATABASE_DESTROY+x} ] || [ "${DATABASE_DESTROY}" = true ]; then
  echo "-----> Import to MySQL database"
  COUNTRY_CODE=$(dokku config:get "${APP}" SHOP_NEW_COUNTRY_CODE)
  DATE=$(dokku config:get "${APP}" SHOP_NEW_MYSQL_DUMP_DATE)
  if [ -z "${DATE}" ]; then
    DATE=$(date "+%Y-%m-%d")
  fi

  sed 's|production_'"${COUNTRY_CODE}"'|'"${STAGE}-shop"'|g' "/database-dumps/production_${COUNTRY_CODE}_${DATE}.sql" | dokku mysql:import "${STAGE}-shop"
fi

echo "-----> Install Elasticsearch plugins"
dokku elasticsearch:plugin:install "${APP}" elasticsearch/marvel/latest
SHOP_NEW_ELASTICSEARCH_PLUGIN_URL=$(dokku config:get "${APP}" SHOP_NEW_ELASTICSEARCH_PLUGIN_URL)
dokku elasticsearch:plugin:install "${APP}" "${SHOP_NEW_ELASTICSEARCH_PLUGIN_URL}" foodpanda-extension
echo "-----> Populate elasticsearch"
dokku run "${APP}" app/console foodpanda:elasticsearch:populate-all

echo "-----> Finalizing database"
echo "UPDATE foodpanda SET website_address = 'https://${APP}.qab.rocks';" | dokku mysql:connect "${STAGE}-shop"
